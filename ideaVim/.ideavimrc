" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc

let mapleader = " "


" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins

" Highlight copied text
Plug "machakann/vim-highlightedyank"
" Commentary plugin
Plug 'tpope/vim-commentary'

set clipboard+=unnamed

"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)

"" -- Suggested options --

" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=8

" Do incremental searching.
set incsearch
" set the line your one to the normal number
set number
" set the number to relative
set relativenumber
" any commands you execute are displayed at the bottom of the screen.
set showmode
set showcmd
"causes the annoying audible bell sound to stop being emitted whenever you enter an invalid input.
set visualbell

" Search improvements
" case-insensitive search by default.
set ignorecase
" if any of the search characters are uppercase, treat the search as case-sensitive.
set smartcase
" start searching as you type, rather than waiting for you to submit the complete search string first.
set incsearch
" ensures all of the search results are highlighted.
set hlsearch

" active surround
"set surround
" active highlightedyank
set highlightedyank
" active nerdtree

Plug 'preservim/nerdtree'
set nerdtree
set NERDTree

" Easymotion settings
" set easymotion
" set notimeout

"" Key mappings
"" ========================================================

"easy exit
inoremap jj <Esc>

" flash
map s <Action>(flash.search)

" Open NERDTree (use q to exit) file tree
map <leader>- :NERDTreeToggle<CR>

"map <leader><leader> <Action>(SearchEverywhere)

" Actions
" inline chatgpt
map <leader>aa <action>(ShowIntentionActions)
map <leader>ff <action>(SearchEverywhere)

" move around buffers
nnoremap <A-h> :bprevious<CR>
nnoremap <A-l> :bnext<CR>

" Pane navigation
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l
nnoremap <C-k> <C-w>k
nnoremap <C-j> <C-w>j

" Jump between methods
nnoremap [[ <Action>(MethodUp)
nnoremap ]] <Action>(MethodDown)

" Easy visual indentation Place tabs in visual mode
vnoremap < <gv
vnoremap > >gv


" Popup navigation
inoremap <C-j> <Action>(PopupMenu-selectNext)
inoremap <C-k> <Action>(PopupMenu-selectPrev)

"" Leader commands
"" ========================================================


" Window splits
map <leader>wv <Action>(SplitVertically)
map <leader>ws <Action>(SplitHorizontally)
map <leader>wu <Action>(Unsplit)
map <leader>wm <Action>(MoveEditorToOppositeTabGroup)

" Display options
map <leader>dd <action>(ToggleDistractionFreeMode)
map <leader>dz <action>(ToggleZenMode)
map <leader>df <action>(ToggleFullScreen)


" File navigation
map <leader>ff <action>(GotoFile)
map <leader>fr <action>(RecentFiles)
map <leader>fc <action>(FindInPath)
map <leader><leader> <Action>(RecentFiles)
map <leader>fl <action>(RecentLocations)
map <leader>fs <action>(NewScratchFile)

" Close active tab
map <leader>q <action>(CloseContent)

" Refactoring
map <leader>rn <Action>(RenameElement)
map <leader>rm <Action>(ExtractMethod)
map <leader>rv <Action>(IntroduceVariable)
map <leader>rf <Action>(IntroduceField)
map <leader>rs <Action>(ChangeSignature)
map <leader>rr <Action>(Refactorings.QuickListPopupAction)

" Go to code
nmap <leader>gd <Action>(GotoDeclaration)
nmap <leader>gy <Action>(GotoTypeDeclaration)
nmap <leader>gi <Action>(GotoImplementation)
nmap <leader>gu <Action>(ShowUsages)
nmap <leader>gt <Action>(GotoTest)
nmap <leader>gf <Action>(Back)
nmap <leader>gb <Action>(Forward)

" Git windows
map <leader>gc <Action>(CheckinProject)
map <leader>gs <Action>(ActivateVersionControlToolWindow)
map <leader>gb <Action>(Git.Branches)

" Errors
map <leader>en <Action>(ReSharperGotoNextErrorInSolution)
map <leader>ep <Action>(ReSharperGotoPrevErrorInSolution)

" Save to clipboard
map <leader>y "+y

" Don't use Ex mode, use Q for formatting.
map Q gq
